MOV R1, SP
MOV R2, 5
SUB R1, R2
MOV R2, "Exit"
MOV R3, [R1]
EQ R3,R2
JNZ R3,158
MOV R2, "Read"
MOV R3, [R1]
EQ R3, R2
JNZ R3,108
MOV R2, "Write"
MOV R3, [R1]
EQ R3, R2
JNZ R3,58
MOV R2, "Heapset"
MOV R3, [R1]
EQ R3,R2
JNZ R3, 208
MOV R2, "Alloc"
MOV R3, [R1]
EQ R3,R2
JNZ R3, 244
MOV R2, "Free"
MOV R3, [R1]
EQ R3,R2
JNZ R3, 260
JMP 276
BRKP
MOV R1,SP
MOV R2, 4
SUB R1, R2
MOV R2, [R1]	//arg 1
ADD R1, 1
MOV R3, [R1]	//arg 2
ADD R1, 1
MOV R4, [R1]	//arg 3
MOV R5, 5
PUSH R5
PUSH R2
PUSH R3
PUSH R4
PUSH R5
INT 7
POP R1
POP R2
POP R2
POP R2
POP R2
MOV R2, SP
MOV R3, 1
SUB R2, R3
MOV [R2], R1
JMP 276
MOV R1,SP
MOV R2, 4
SUB R1, R2
MOV R2, [R1]	//arg 1
ADD R1, 1
MOV R3, [R1]	//arg 2
ADD R1, 1
MOV R4, [R1]	//arg 3
MOV R5, 7
PUSH R5
PUSH R2
PUSH R3
PUSH R4
PUSH R5
INT 6
POP R1
POP R2
POP R2
POP R2
POP R2
MOV R2, SP
MOV R3, 1
SUB R2, R3
MOV [R2], R1
JMP 276
MOV R1,SP
MOV R2, 4
SUB R1, R2
MOV R2, [R1]	//arg 1
ADD R1, 1
MOV R3, [R1]	//arg 2
ADD R1, 1
MOV R4, [R1]	//arg 3
MOV R5, 10
PUSH R5
PUSH R2
PUSH R3
PUSH R4
PUSH R5
INT 10
POP R1
POP R2
POP R2
POP R2
POP R2
MOV R2, SP
MOV R3, 1
SUB R2, R3
MOV [R2], R1
JMP 276
MOV R0,1023
MOV R1,1
ADD R0,R1		//l1
MOV [R0],-1;
MOV R2,R0
LT R2,2048
JNZ R2, 212
MOV R0,1024
MOV R1,1032
MOV R2,8
MOV [R0],R1		//l2
ADD R0,R2
ADD R1,R2
MOV R3,R0
LT R3,2048
JNZ R3, 228
MOV [2040],-1
JMP 276
MOV R0, [1024]
MOV R1, [R0]
MOV [1024], R1
MOV R1, SP
MOV R2, 1
SUB R1, R2
MOV [R1], R0
JMP 276
MOV R0,SP
MOV R1,4
SUB R0,R1
MOV R1,[R0]
MOV R0,[1024]
MOV [R1],R0
MOV [1024],R1
JMP 276
RET
